{{>licenseInfo}}
import { autoinject } from "aurelia-framework";
import { HttpClient } from 'aurelia-http-client';

import { AuthStorage,
{{#apiInfo}}
{{#apis}}
{{#operations}}
{{classname}},
{{/operations}}
{{/apis}}
{{/apiInfo}}
} from '.';

export interface IOpenApiProvider {
{{#apiInfo}}
{{#apis}}
{{#operations}}
{{#camelcase}}{{classname}}{{/camelcase}} : {{classname}};
{{/operations}}
{{/apis}}
{{/apiInfo}}
}

/**
 * OpenApiProvider
 */
@autoinject
export class OpenApiProvider implements IOpenApiProvider {

  {{#apiInfo}}
  {{#apis}}
  {{#operations}}
  private _{{#camelcase}}{{classname}}{{/camelcase}} : {{classname}};
  {{/operations}}
  {{/apis}}
  {{/apiInfo}}

  constructor (httpClient: HttpClient, authStorage: AuthStorage) {
    {{#apiInfo}}
    {{#apis}}
    {{#operations}}
    this.{{#camelcase}}{{classname}}{{/camelcase}} = new {{classname}}(httpClient, authStorage);
    {{/operations}}
    {{/apis}}
    {{/apiInfo}}
  }

  {{#apiInfo}}
  {{#apis}}
  {{#operations}}
  public get {{#camelcase}}{{classname}}{{/camelcase}}() : {{classname}} {
    return this._{{#camelcase}}{{classname}}{{/camelcase}};
  }

  public set {{#camelcase}}{{classname}}{{/camelcase}}(value: {{classname}}) {
    this._{{#camelcase}}{{classname}}{{/camelcase}} = value;
  }
  {{/operations}}
  {{/apis}}
  {{/apiInfo}}
}
